name: Build and Deploy Documentation

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install system dependencies for OVITO
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          xvfb \
          libgl1-mesa-glx \
          libglu1-mesa \
          libxrender1 \
          libxrandr2 \
          libxss1 \
          libxcursor1 \
          libxcomposite1 \
          libasound2 \
          libxi6 \
          libxtst6 \
          qtbase5-dev \
          libqt5gui5 \
          libqt5widgets5 \
          libqt5opengl5-dev \
          libqt5core5a
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev] || (pip install -e . && pip install -r requirements-dev.txt)
        
    - name: Set up environment for OVITO
      run: |
        echo "QT_QPA_PLATFORM=offscreen" >> $GITHUB_ENV
        echo "OVITO_HEADLESS=1" >> $GITHUB_ENV
        
    - name: Verify Sphinx installation
      run: |
        python -m sphinx --version
        python -c "import lammpskit; print('LAMMPSKit {} installed successfully'.format(lammpskit.__version__))"
        
    - name: Build documentation
      run: |
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        cd docs
        python -m sphinx -b html source build -W
        
    - name: Check documentation links
      run: |
        cd docs
        python -m sphinx -b linkcheck source build
        
    - name: Upload documentation artifacts (for all builds)
      uses: actions/upload-artifact@v4
      with:
        name: documentation-html
        path: docs/build/
        retention-days: 30
        
    - name: Setup Pages (only on main branch)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/configure-pages@v5
      
    - name: Upload artifact (only on main branch)
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      uses: actions/upload-pages-artifact@v3
      with:
        path: docs/build
        
        
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

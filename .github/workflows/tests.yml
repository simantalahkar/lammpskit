name: Tests and Quality Checks

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12", "3.13"]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install system dependencies for OVITO
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          xvfb \
          libgl1-mesa-glx \
          libglu1-mesa \
          libxrender1 \
          libxrandr2 \
          libxss1 \
          libxcursor1 \
          libxcomposite1 \
          libasound2 \
          libxi6 \
          libxtst6 \
          qtbase5-dev \
          libqt5gui5 \
          libqt5widgets5 \
          libqt5opengl5-dev \
          libqt5core5a
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev] || (pip install -e . && pip install -r requirements-dev.txt)
        
    - name: Set up environment for OVITO
      run: |
        echo "QT_QPA_PLATFORM=offscreen" >> $GITHUB_ENV
        echo "OVITO_HEADLESS=1" >> $GITHUB_ENV
        
    - name: Run tests with virtual display
      run: |
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        python -m pytest tests/ --cov=lammpskit --cov-report=xml --cov-report=html
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v4
      with:
        files: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        token: ${{ secrets.CODECOV_TOKEN }}
        
  documentation:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install system dependencies for OVITO
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          xvfb \
          libgl1-mesa-glx \
          libglu1-mesa \
          libxrender1 \
          libxrandr2 \
          libxss1 \
          libxcursor1 \
          libxcomposite1 \
          libasound2 \
          libxi6 \
          libxtst6 \
          qtbase5-dev \
          libqt5gui5 \
          libqt5widgets5 \
          libqt5opengl5-dev \
          libqt5core5a
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev] || (pip install -e . && pip install -r requirements-dev.txt)
        
    - name: Set up environment for OVITO
      run: |
        echo "QT_QPA_PLATFORM=offscreen" >> $GITHUB_ENV
        echo "OVITO_HEADLESS=1" >> $GITHUB_ENV
        
    - name: Verify Sphinx installation
      run: |
        python -m sphinx --version
        
    - name: Build documentation with virtual display
      run: |
        export DISPLAY=:99
        Xvfb :99 -screen 0 1024x768x24 > /dev/null 2>&1 &
        cd docs
        python -m sphinx -b html source build -W
        
    - name: Check documentation links
      run: |
        cd docs
        python -m sphinx -b linkcheck source build
        
  code-quality:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev] || (pip install -e . && pip install -r requirements-dev.txt)
        pip install flake8 black isort mypy
        
    - name: Run code formatting check
      run: |
        black --check --diff lammpskit/
        isort --check-only --diff lammpskit/
        
    - name: Run linting
      run: |
        flake8 lammpskit/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 lammpskit/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
        
    - name: Run type checking
      run: |
        mypy lammpskit/ --ignore-missing-imports
